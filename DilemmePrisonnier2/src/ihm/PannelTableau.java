/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ihm;

import java.util.Observable;
import java.util.Observer;
import javax.swing.table.AbstractTableModel;
import modele.Partie;

/**
 *
 * @author Maïlys
 */
public class PannelTableau extends javax.swing.JPanel implements Observer {
    private ModeleTableau modele;
    /**
     * Creates new form PannelTableau
     */


    
    public PannelTableau(Partie partie) {
        modele = new ModeleTableau();
        initComponents();
        this.partie1 = partie;
        partie1.addObserver(this);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        partie1 = new modele.Partie();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(modele);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private modele.Partie partie1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        modele.fireTableDataChanged();
    }

    private class ModeleTableau extends AbstractTableModel {
        private final String [] entetes = {"N°", "Choix A","Choix B", "Gain A","Gain B"};

        public ModeleTableau() {
        }

        @Override
        public String getColumnName(int column) {
           return entetes[column]; 
        }
        
        @Override
        public int getRowCount() {
           return partie1.getNbCoups(); 
        }

        @Override
        public int getColumnCount() {
            return entetes.length;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            switch (columnIndex){
                case 0: return rowIndex +1;
                case 1: return partie1.AaCoopere(rowIndex)? "C":"D";
                case 2: return partie1.BaCoopere(rowIndex)? "C":"D";
                case 3: return partie1.getGainA(rowIndex);
                case 4: return partie1.getGainB(rowIndex);
                default: return "plus tard";
                
                
        }
    }
    }
}
   

